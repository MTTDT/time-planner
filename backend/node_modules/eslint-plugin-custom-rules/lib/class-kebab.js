'use strict';

var _jsxAstUtils = require('jsx-ast-utils');

var _schema = require('./schema');

var _lodash = require('lodash');

var errorMessage = function errorMessage(className) {
  return 'className ' + className + ' must be kebab cased';
}; /**
    * @fileoverview Enforce className prop is kebab cased.
    */

// ----------------------------------------------------------------------------
// Rule Definition
// ----------------------------------------------------------------------------

var schema = (0, _schema.generateObjSchema)();

module.exports = {
  meta: {
    docs: {},
    schema: [schema]
  },

  create: function create(context) {
    return {
      JSXOpeningElement: function JSXOpeningElement(node) {
        var type = (0, _jsxAstUtils.elementType)(node);

        var className = (0, _jsxAstUtils.getPropValue)((0, _jsxAstUtils.getProp)(node.attributes, 'className'));

        if (!className) {
          return;
        }

        // split string with space
        var classNameArr = className.split(' ');

        var hasFailed = classNameArr.some(function (name) {
          return name !== (0, _lodash.kebabCase)(name);
        });

        if (!hasFailed) {
          return;
        }

        var failedClassName = '';
        if (hasFailed) {
          failedClassName = classNameArr.filter(function (name) {
            return name !== (0, _lodash.kebabCase)(name);
          }).join(' ');
        }

        context.report({
          node: node,
          message: errorMessage(failedClassName)
        });
      }
    };
  }
};