/**
 * @fileoverview Enforce className prop is kebab cased.
 */

// ----------------------------------------------------------------------------
// Rule Definition
// ----------------------------------------------------------------------------

import { elementType, getProp, getPropValue } from 'jsx-ast-utils'
import { generateObjSchema } from './schema'
import { kebabCase } from 'lodash'

const errorMessage = (className) => `className ${className} must be kebab cased`

const schema = generateObjSchema()

module.exports = {
  meta: {
    docs: {},
    schema: [schema],
  },

  create: context => ({
    JSXOpeningElement: (node) => {
      const type = elementType(node)

      const className = getPropValue(getProp(node.attributes, 'className'))

      if (!className) {
        return
      }

      // split string with space
      const classNameArr = className.split(' ')

      const hasFailed = classNameArr.some(name => name !== kebabCase(name))

      if (!hasFailed) {
        return
      }

      let failedClassName = ''
      if (hasFailed) {
        failedClassName = classNameArr.filter(name => name !== kebabCase(name)).join(' ')
      }

      context.report({
        node,
        message: errorMessage(failedClassName),
      })
    }
  })
}
